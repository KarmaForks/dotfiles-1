[alias]
	c = commit -am
	up = pull
	p = push
	s = status
	sclone = clone --depth=1
	co = checkout
	df = diff --color --color-words --abbrev
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
	# No need for a GUI - a nice, colorful, graphical representation
	# https://git-scm.com/docs/git-log
	# via https://medium.com/@payload.dd/thanks-for-the-git-st-i-will-use-this-4da5839a21a4
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
    	# Show the diff between the latest commit and the current state
	reup = rebase-update # depot_tools specific
	prune = fetch --prune
	# Because I constantly forget how to do this
	# https://git-scm.com/docs/git-fetch#git-fetch--p
	undo = reset --soft HEAD^
	# Not quite as common as an amend, but still common
	# https://git-scm.com/docs/git-reset#git-reset-emgitresetemltmodegtltcommitgt1
	stash-all = stash save --include-untracked
	# We wanna grab those pesky un-added files!
	# https://git-scm.com/docs/git-stash
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

[pager]
	# insanely beautiful diffs ==> npm install -g diff-so-fancy
	diff = diff-so-fancy | less --tabs=4 -RFX
	show = diff-so-fancy | less --tabs=4 -RFX

[interactive]
  # disabled until github.com/so-fancy/diff-so-fancy/pull/172 is resolved :(
	# diffFilter = "diff-so-fancy"

# so much color
[color]
	ui = always
[color "diff"]
	meta = yellow bold
	commit = green bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22t"
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

# rewrites of repo paths
[url "git@github.com:"]
	insteadOf = "https://github.com/"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
	pushInsteadOf = "https://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"
	
[url "git://gist.github.com/"]
	insteadOf = "gist:"

# correct typos
[help]
	autocorrect = 1

[merge]
	ff = only
	# I pretty much never mean to do a real merge, since I use a rebase workflow.
	# Note: this global option applies to all merges, including those done during a git pull
	# https://git-scm.com/docs/git-config#git-config-mergeff

	conflictstyle = diff3
	# Standard diff is two sets of final changes. This introduces the original text before each side's changes.
	# https://git-scm.com/docs/git-config#git-config-mergeconflictStyle

[push]
	default = current
	# push easily. http://stackoverflow.com/a/23918418/89484
	
	followTags = true
	# Because I get sick of telling git to do it manually
	# https://git-scm.com/docs/git-config#git-config-pushfollowTags

[fetch]
	prune = true
      

[include]
	path = ~/.gitconfig.local
	# use separate file for username / github token / etc
	
[status]
	showUntrackedFiles = all
	# Sometimes a newly-added folder, since it's only one line in git status, can slip under the radar.
	# https://git-scm.com/docs/git-config#git-config-statusshowUntrackedFiles
	
[commit]
	gpgSign = true
	# https://help.github.com/articles/about-gpg/
	# https://git-scm.com/docs/git-config#git-config-commitgpgSign
	# https://help.github.com/articles/signing-commits-using-gpg/
	
[diff]
	compactionHeuristic = true

[log]
	date = relative
